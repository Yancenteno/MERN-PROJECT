{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cente\\\\OneDrive\\\\Desktop\\\\CodingDojo\\\\MERN\\\\Projects\\\\Medical\\\\client\\\\src\\\\views\\\\MedInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedInfo = () => {\n  _s();\n  var _medicines$active_ing, _medicines$active_ing2;\n  const {\n    id\n  } = useParams();\n  const [medicines, setMedicines] = useState({});\n  useEffect(() => {\n    axios.get(`https://drug-info-and-price-history.p.rapidapi.com/1/druginfo?drug=${id}`, {\n      \"headers\": {\n        'X-RapidAPI-Key': 'c8a8e86c4bmshaf6ec9cd4fafff7p1bc63ejsn8b52e0af2dde',\n        'X-RapidAPI-Host': 'drug-info-and-price-history.p.rapidapi.com'\n      }\n    }).then(res => {\n      setMedicines(res.data[0]);\n      console.log(res.data[0]);\n    }).catch(err => {\n      console.log(err);\n      setMedicines({});\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medicine Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Generic Name: \", medicines.generic_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Brand Name: \", medicines.brand_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Route: \", medicines.route]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Dosage form: \", medicines.dosage_form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), Array.isArray(medicines.active_ingredients) ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Ingredients:\", medicines.active_ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [ingredient.name, \" - \", ingredient.strength, index < medicines.active_ingredients.length - 1 ? ', ' : '']\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Ingredients: \", (_medicines$active_ing = medicines.active_ingredients) === null || _medicines$active_ing === void 0 ? void 0 : _medicines$active_ing.name, \" - \", (_medicines$active_ing2 = medicines.active_ingredients) === null || _medicines$active_ing2 === void 0 ? void 0 : _medicines$active_ing2.strength]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(MedInfo, \"4sUWDTDSwD8Z3sMs+QzCakMBrr8=\", false, function () {\n  return [useParams];\n});\n_c = MedInfo;\nexport default MedInfo;\nvar _c;\n$RefreshReg$(_c, \"MedInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","MedInfo","_s","_medicines$active_ing","_medicines$active_ing2","id","medicines","setMedicines","get","then","res","data","console","log","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","generic_name","brand_name","route","dosage_form","Array","isArray","active_ingredients","map","ingredient","index","name","strength","length","_c","$RefreshReg$"],"sources":["C:/Users/cente/OneDrive/Desktop/CodingDojo/MERN/Projects/Medical/client/src/views/MedInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst MedInfo = () => {\r\n    const { id } = useParams();\r\n    const [medicines, setMedicines] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://drug-info-and-price-history.p.rapidapi.com/1/druginfo?drug=${id}`, {\r\n            \"headers\": {\r\n                'X-RapidAPI-Key': 'c8a8e86c4bmshaf6ec9cd4fafff7p1bc63ejsn8b52e0af2dde',\r\n                'X-RapidAPI-Host': 'drug-info-and-price-history.p.rapidapi.com'\r\n            }\r\n        })\r\n            .then(res => {\r\n                setMedicines(res.data[0]);\r\n                console.log(res.data[0]);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setMedicines({});\r\n            });\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Medicine Info</h1>\r\n            <p>Generic Name: {medicines.generic_name}</p>\r\n            <p>Brand Name: {medicines.brand_name}</p>\r\n            <p>Route: {medicines.route}</p>\r\n            <p>Dosage form: {medicines.dosage_form}</p>\r\n            {Array.isArray(medicines.active_ingredients) ? (\r\n                <p>\r\n                    Ingredients:\r\n                    {medicines.active_ingredients.map((ingredient, index) => (\r\n                        <span key={index}>\r\n                            {ingredient.name} - {ingredient.strength}\r\n                            {index < medicines.active_ingredients.length - 1 ? ', ' : ''}\r\n                        </span>\r\n                    ))}\r\n                </p>\r\n            ) : (\r\n                <p>Ingredients: {medicines.active_ingredients?.name} - {medicines.active_ingredients?.strength}</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MedInfo;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}