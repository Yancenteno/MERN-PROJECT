{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cente\\\\OneDrive\\\\Desktop\\\\CodingDojo\\\\MERN\\\\Projects\\\\Medical\\\\client\\\\src\\\\views\\\\MedInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedInfo = () => {\n  _s();\n  const {\n    searchTerm\n  } = useParams();\n  const [medicines, setMedicines] = useState(null); // Use null instead of an empty object\n\n  useEffect(() => {\n    axios.get(`https://drug-info-and-price-history.p.rapidapi.com/1/druginfo?drug=${searchTerm}`, {\n      \"headers\": {\n        'X-RapidAPI-Key': 'c8a8e86c4bmshaf6ec9cd4fafff7p1bc63ejsn8b52e0af2dde',\n        'X-RapidAPI-Host': 'drug-info-and-price-history.p.rapidapi.com'\n      }\n    }).then(res => {\n      if (res.data && res.data.length > 0) {\n        setMedicines(res.data[0]);\n        console.log(res.data[0]);\n      } else {\n        setMedicines(null); // Set to null if no data is found\n      }\n    }).catch(err => {\n      console.log(err);\n      setMedicines(null); // Set to null if an error occurs\n    });\n  }, [searchTerm]);\n  if (medicines === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No medicine information found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medicine Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Generic Name: \", medicines.generic_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Brand Name: \", medicines.brand_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(MedInfo, \"BWLWWxLwXzC1J+YuXG3lvswvc9U=\", false, function () {\n  return [useParams];\n});\n_c = MedInfo;\nexport default MedInfo;\nvar _c;\n$RefreshReg$(_c, \"MedInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","MedInfo","_s","searchTerm","medicines","setMedicines","get","then","res","data","length","console","log","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","generic_name","brand_name","_c","$RefreshReg$"],"sources":["C:/Users/cente/OneDrive/Desktop/CodingDojo/MERN/Projects/Medical/client/src/views/MedInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst MedInfo = () => {\r\n    const { searchTerm } = useParams();\r\n    const [medicines, setMedicines] = useState(null); // Use null instead of an empty object\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://drug-info-and-price-history.p.rapidapi.com/1/druginfo?drug=${searchTerm}`, {\r\n            \"headers\": {\r\n                'X-RapidAPI-Key': 'c8a8e86c4bmshaf6ec9cd4fafff7p1bc63ejsn8b52e0af2dde',\r\n                'X-RapidAPI-Host': 'drug-info-and-price-history.p.rapidapi.com'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.data && res.data.length > 0) {\r\n                    setMedicines(res.data[0]);\r\n                    console.log(res.data[0]);\r\n                } else {\r\n                    setMedicines(null); // Set to null if no data is found\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setMedicines(null); // Set to null if an error occurs\r\n            });\r\n    }, [searchTerm]);\r\n\r\n    if (medicines === null) {\r\n        return <div>No medicine information found.</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Medicine Info</h1>\r\n            <p>Generic Name: {medicines.generic_name}</p>\r\n            <p>Brand Name: {medicines.brand_name}</p>\r\n            {/* Display other information here */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MedInfo;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAW,CAAC,GAAGN,SAAS,CAAC,CAAC;EAClC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElDC,SAAS,CAAC,MAAM;IACZE,KAAK,CAACQ,GAAG,CAAE,sEAAqEH,UAAW,EAAC,EAAE;MAC1F,SAAS,EAAE;QACP,gBAAgB,EAAE,oDAAoD;QACtE,iBAAiB,EAAE;MACvB;IACJ,CAAC,CAAC,CACGI,IAAI,CAACC,GAAG,IAAI;MACT,IAAIA,GAAG,CAACC,IAAI,IAAID,GAAG,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QACjCL,YAAY,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;QACzBE,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,MAAM;QACHJ,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACxB;IACJ,CAAC,CAAC,CACDQ,KAAK,CAACC,GAAG,IAAI;MACVH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAChBT,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC;EACV,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAEhB,IAAIC,SAAS,KAAK,IAAI,EAAE;IACpB,oBAAOJ,OAAA;MAAAe,QAAA,EAAK;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpD;EAEA,oBACInB,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBnB,OAAA;MAAAe,QAAA,GAAG,gBAAc,EAACX,SAAS,CAACgB,YAAY;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CnB,OAAA;MAAAe,QAAA,GAAG,cAAY,EAACX,SAAS,CAACiB,UAAU;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExC,CAAC;AAEd,CAAC;AAACjB,EAAA,CArCID,OAAO;EAAA,QACcJ,SAAS;AAAA;AAAAyB,EAAA,GAD9BrB,OAAO;AAuCb,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}